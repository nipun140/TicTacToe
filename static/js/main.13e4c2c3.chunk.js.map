{"version":3,"sources":["cross.jsx","Circle.jsx","Item.jsx","App.js","index.js"],"names":["Cross","className","Circle","Item","props","winelineArr","index","isclickable","state","onClick","style","pointerEvents","background","includes","initializeArr","App","useState","gameArr","setGameArr","isPlayer1","setIsPlayer1","showalert","setShowAlert","msg","setMsg","firstMount","setFirstMount","winline","setWinline","newGameBtn","setNewGameBtn","setIsclickable","resetGame","useEffect","winner","lines","i","length","a","b","c","console","log","calculateWinner","count","map","newArr","Array","from","alert","updateGame","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e4c2c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Cross() {\r\n  return (\r\n    <>\r\n      <div className=\"cross\">\r\n        <div className=\" stick stick1\"></div>\r\n        <div className=\" stick stick2\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cross;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Circle() {\r\n  return (\r\n    <>\r\n      <div className=\"circle\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","import React from \"react\";\r\nimport Cross from \"./cross\";\r\nimport Circle from \"./Circle\";\r\nimport \"./App.css\";\r\n\r\nfunction Item(props) {\r\n  const { winelineArr, index, isclickable, state, onClick } = props;\r\n\r\n  //check state type to render custom components\r\n  function checkType() {\r\n    if (state === \"\") {\r\n      return \"\";\r\n    } else if (state === \"X\") {\r\n      return <Cross />;\r\n    } else {\r\n      return <Circle />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={onClick}\r\n        style={{\r\n          pointerEvents: isclickable ? \"all\" : \"none\",\r\n          background: winelineArr.includes(index) ? \"#ff3838\" : \"#273c75\",\r\n        }}\r\n        className=\"item\"\r\n      >\r\n        {checkType()}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Item from \"./Item\";\nconst initializeArr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n\nfunction App() {\n  const [gameArr, setGameArr] = useState(initializeArr);\n  const [isPlayer1, setIsPlayer1] = useState(true);\n  const [showalert, setShowAlert] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [firstMount, setFirstMount] = useState();\n  const [winline, setWinline] = useState([-1, -1, -1]);\n  const [newGameBtn, setNewGameBtn] = useState(false);\n  const [isclickable, setIsclickable] = useState(true);\n\n  //reset the game\n  function resetGame() {\n    setWinline([-1, -1, -1]);\n    setIsclickable(true);\n    setNewGameBtn(false);\n    setShowAlert(false);\n    setMsg(\"\");\n    setIsPlayer1(true);\n    setGameArr(initializeArr);\n  }\n\n  // update the game board when user clicks a div\n  function updateGame(index) {\n    setFirstMount(false);\n\n    let newArr = Array.from(gameArr);\n\n    if (newArr[index] === \"\") {\n      newArr[index] = isPlayer1 ? \"X\" : \"0\";\n      setGameArr(newArr);\n      setIsPlayer1(!isPlayer1);\n    } else {\n      alert(\"choose different box\");\n    }\n  }\n\n  useEffect(() => {\n    setFirstMount(true);\n  }, []);\n\n  useEffect(() => {\n    if (!firstMount) {\n      let winner = calculateWinner();\n      if (winner) {\n        setShowAlert(true);\n        winner === \"X\"\n          ? setMsg(\"winner is player1 (X)\")\n          : setMsg(\"winner is player 2 (O)\");\n        setNewGameBtn(true);\n        setIsclickable(false);\n      } else {\n        let count = 0;\n        for (let i = 0; i < gameArr.length; i++) {\n          if (gameArr[i] !== \"\") {\n            count += 1;\n          }\n        }\n\n        if (count === 9) {\n          setShowAlert(true);\n          setMsg(\"the match is drawn\");\n          setNewGameBtn(true);\n          setIsclickable(false);\n        }\n      }\n    }\n  }, [gameArr]);\n\n  //checkWinner, will return x,0 or null(checks current board ans return the winner of the board)\n  function calculateWinner() {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        gameArr[a] &&\n        gameArr[a] === gameArr[b] &&\n        gameArr[a] === gameArr[c]\n      ) {\n        console.log(a, b, c);\n        setWinline([a, b, c]);\n        return gameArr[a];\n      }\n    }\n    return null;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">Tic-Tac-Toe (X/O)</h1>\n      <h1 className=\"game-info\">\n        {showalert ? (\n          <span className=\"alert-msg\">{msg}</span>\n        ) : isPlayer1 ? (\n          \"player1(X) Turn\"\n        ) : (\n          \"player2(O) Turn\"\n        )}{\" \"}\n      </h1>\n      <div className=\"game-container\">\n        {gameArr.map((state, index) => {\n          return (\n            <Item\n              key={index}\n              winelineArr={winline}\n              index={index}\n              isclickable={isclickable}\n              state={state}\n              onClick={() => updateGame(index)}\n            />\n          );\n        })}\n      </div>\n      <div className=\"buttons\">\n        <button onClick={resetGame}>Reset Game</button>\n        <button\n          style={{ display: newGameBtn ? \"block\" : \"none\" }}\n          onClick={resetGame}\n        >\n          New Game\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}